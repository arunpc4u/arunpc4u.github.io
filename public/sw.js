const CACHE_NAME="sudo-v4",HASH_KEY="c06cf84aba41953f720d";let CACHE_URLS=["/","index.html","/build/images/offmp4.ecffb27a.jpg","/build/images/vijay.ef6c1bc9.jpg","/build/0-[HASH_KEY].js","/build/1-[HASH_KEY].js","/build/2-[HASH_KEY].js","/build/3-[HASH_KEY].js","/build/4-[HASH_KEY].js","/build/bundle-[HASH_KEY].js","/build/vendors~bundle-[HASH_KEY].js","/build/polyfill-[HASH_KEY].js","/build/vendors~polyfill-[HASH_KEY].js"];CACHE_URLS=CACHE_URLS.map(e=>e.replace(/\[HASH_KEY\]/gu,HASH_KEY)),self.addEventListener("install",e=>{e.waitUntil(caches.open("sudo-v4").then(e=>e.addAll(CACHE_URLS)))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>0===e.indexOf("sudo-v4")?null:caches.delete(e)))))}),self.addEventListener("fetch",e=>{const l=e.request;if("GET"!==l.method)return null;const t=new URL(e.request.url);"/"===t.pathname?e.respondWith(caches.open("sudo-v4").then(e=>e.match(l).then(t=>{return fetch(l).then(t=>(e.put(l,t.clone()),t)).catch(()=>t)||t}))):(CACHE_URLS.includes(t.href)||CACHE_URLS.includes(t.pathname))&&e.respondWith(caches.open("sudo-v4").then(e=>e.match(l).then(e=>e||fetch(l))))});